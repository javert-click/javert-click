import Array.jsil, Boolean.jsil, Date.jsil, Function.jsil, Global.jsil, Init.jsil, Internals.jsil, Math.jsil, Number.jsil, Object.jsil, RegExp.jsil, String.jsil, Errors.jsil, List.jsil, Node.jsil, DOM.jsil, Attribute.jsil, CDATASection.jsil, CharacterData.jsil, Comment.jsil, ArrayUtils.jsil, Document.jsil, Element.jsil, NodeList.jsil, Text.jsil, DocumentFragment.jsil, LiveNodeList.jsil, DocumentType.jsil, EntityReference.jsil, ProcessingInstruction.jsil, DOMException.jsil, NamedNodeMap.jsil, Entity.jsil, Notation.jsil, DOMImplementation.jsil, DocumentLoading.jsil, JsUnitCore.jsil, DOMTestCase.jsil, initDOMHeapCoreLevel1.jsil, HTMLFiles.jsil, Event.jsil, EventListener.jsil, EventTarget.jsil, ShadowRoot.jsil, Window.jsil, GamepadEvent.jsil, FocusEvent.jsil, MouseEvent.jsil, CustomEvent.jsil, UIEvent.jsil, WheelEvent.jsil, KeyboardEvent.jsil, MessageEvent.jsil, EventsSemantics.jsil, FormElement.jsil, InputElement.jsil, CompositionEvent.jsil, HTMLSlotElement.jsil, HTMLElement.jsil, HTMLDocument.jsil, XMLDocument.jsil, ClassList.jsil, StringUtils.jsil, CSSStyleDeclaration.jsil, DOMRect.jsil, Performance.jsil, MessageChannel.jsil, MessagePort.jsil, Serialization.jsil, MPSemantics.jsil, MessagePassing.jsil, ConfSetup.jsil, DedicatedWorkerGlobalScope.jsil, SharedWorker.jsil, SharedWorkerGlobalScope.jsil, Worker.jsil, WorkerGlobalScope.jsil, JS2JSILList.jsil, ObjectUtils.jsil, Promise.jsil, Testharness.jsil;
proc anonymous_MainFibonacci_0 (x__scope, x__this, e) {
              x__er_m := new(null);
              x__er := new(x__er_m);
              [x__er_m, "@er"] := true;
              [x__er, "arguments"] := undefined;
              [x__er, "e"] := e;
              x_214 := args;
              x_215 := (cdr (cdr x_214));
              x__args := "create_arguments_object"(x_215);
              [x__er, "arguments"] := x__args;
              x__sc_fst := (x__scope l+ {{ x__er }});
              x__te := "TypeError"();
              x__se := "SyntaxError"();
              x_216 := "hasProperty"($lg, "console") with pre_elab;
              goto [x_216] then_32 else_31;
    then_32:  x_217 := {{ "v", $lg, "console" }};
              goto end_6;
    else_31:  x_218 := {{ "v", undefined, "console" }};
    end_6:    PHI(x_219: x_217, x_218);
              x_219_v := "i__getValue"(x_219) with pre_elab;
              x_220 := "i__checkObjectCoercible"(x_219_v) with pre_elab;
              x_221 := {{ "o", x_219_v, "log" }};
              x_221_v := "i__getValue"(x_221) with pre_elab;
              x_226_v := "i__getValue"("MAIN: got result from worker:") with pre_elab;
              x_222 := l-nth(x__sc_fst, 1.);
              x_223 := {{ "v", x_222, "e" }};
              x_223_v := "i__getValue"(x_223) with pre_elab;
              x_224 := "i__checkObjectCoercible"(x_223_v) with pre_elab;
              x_225 := {{ "o", x_223_v, "data" }};
              x_225_v := "i__getValue"(x_225) with pre_elab;
              x_227_p := "i__toPrimitive"(x_226_v) with pre_elab;
              x_225_p := "i__toPrimitive"(x_225_v) with pre_elab;
              goto [(((typeOf x_227_p) = Str) or ((typeOf x_225_p) = Str))] then_33 else_32;
    then_33:  x_228_s := "i__toStringComputed"(x_227_p) with pre_elab;
              x_225_s := "i__toStringComputed"(x_225_p) with pre_elab;
              x_229 := (x_228_s ++ x_225_s);
              goto fi_8;
    else_32:  x_230_n := "i__toNumber"(x_227_p) with pre_elab;
              x_225_n := "i__toNumber"(x_225_p) with pre_elab;
              x_231 := (x_230_n + x_225_n);
    fi_8:     PHI(x_232: x_229, x_231);
              x_232_v := "i__getValue"(x_232) with pre_elab;
              goto [(not ((typeOf x_221_v) = Obj))] pre_elab next_55;
    next_55:  x_234 := metadata (x_221_v);
              x_233 := "i__isCallable"(x_221_v);
              goto [x_233] next_56 pre_elab;
    next_56:  x_235 := hasField(x_234,"@boundThis");
              goto [x_235] else_33 lab_15;
    else_33:  x_236 := [x_234, "@boundThis"];
              x_237 := [x_234, "@boundArguments"];
              x_238 := [x_234, "@targetFunction"];
              x_239 := metadata (x_238);
              x_body_16 := [x_239, "@call"];
              x_fscope_16 := [x_239, "@scope"];
              x_240 := (({{ x_body_16, x_fscope_16, x_236 }} l+ x_237) l+ {{ x_232_v }});
              x_241 := apply(x_240) with pre_elab;
              goto lab_16;
    lab_15:   x_body_17 := [x_234, "@call"];
              goto [(x_body_17 = "ExecuteEval")] then_34 else_34;
    then_34:  x_242 := extern ExecuteEval(x__sc_fst, x__this, x_232_v) with pre_elab;
              goto lab_16;
    else_34:  x_fscope_17 := [x_234, "@scope"];
              goto [((typeOf x_221) = List)] then_35 else_35;
    then_35:  goto [(l-nth(x_221, 0.) = "o")] then_36 else_35;
    then_36:  x_this_23 := l-nth(x_221, 1.);
              goto fi_9;
    else_35:  x_this_24 := undefined;
    fi_9:     PHI(x_this_25: x_this_23, x_this_24);
              goto [((typeOf x_this_25) = Obj)] next_57 next_58;
    next_57:  [x_this_25, "__newTarget"] := {{ "d", undefined, true, true, true }};
    next_58:  x_243 := x_body_17(x_fscope_17, x_this_25, x_232_v) with pre_elab;
    lab_16:   PHI(x_244: x_241, x_242, x_243);
              goto [(x_244 = empty)] next_59 next_60;
    next_59:  x_245 := undefined;
    next_60:  PHI(x_246: x_244, x_245);
              x_246_v := "i__getValue"(x_246) with pre_elab;
              x_247 := empty;
    pre_rlab: ret := x_247;
              x__scope_f := x__sc_fst;
              return;
    pre_elab: PHI(ret: x_216, x_219_v, x_220, x_221_v, x_226_v, x_223_v, x_224, x_225_v, x_227_p, x_225_p, x_228_s, x_225_s, x_230_n, x_225_n, x_232_v, x__te, x__te, x_241, x_242, x_243, x_246_v);
              x__scope_f := x__sc_fst;
              throw
};

proc mainMainFibonacci () {
             x_0 := "setupInitialHeap"();
             x__scope := {{ $lg }};
             x__sc_fst := {{ $lg }};
             x__this := $lg;
             [$lg, "MP"] := {{ "d", undefined, true, true, false }};
             [$lg, "Worker"] := {{ "d", undefined, true, true, false }};
             [$lg, "n"] := {{ "d", undefined, true, true, false }};
             [$lg, "worker"] := {{ "d", undefined, true, true, false }};
             [$lg, "arguments"] := {{ "d", undefined, true, true, false }};
             x__te := "TypeError"();
             x__se := "SyntaxError"();
             x_1 := "hasProperty"($lg, "console") with elab;
             goto [x_1] then_0 else_0;
    then_0:  x_2 := {{ "v", $lg, "console" }};
             goto end_0;
    else_0:  x_3 := {{ "v", undefined, "console" }};
    end_0:   PHI(x_4: x_2, x_3);
             x_4_v := "i__getValue"(x_4) with elab;
             x_5 := "i__checkObjectCoercible"(x_4_v) with elab;
             x_6 := {{ "o", x_4_v, "log" }};
             x_6_v := "i__getValue"(x_6) with elab;
             x_7_v := "i__getValue"("MAIN: Going to initiliaze heap!") with elab;
             goto [(not ((typeOf x_6_v) = Obj))] elab next_0;
    next_0:  x_9 := metadata (x_6_v);
             x_8 := "i__isCallable"(x_6_v);
             goto [x_8] next_1 elab;
    next_1:  x_10 := hasField(x_9,"@boundThis");
             goto [x_10] else_1 lab_0;
    else_1:  x_11 := [x_9, "@boundThis"];
             x_12 := [x_9, "@boundArguments"];
             x_13 := [x_9, "@targetFunction"];
             x_14 := metadata (x_13);
             x_body_0 := [x_14, "@call"];
             x_fscope_0 := [x_14, "@scope"];
             x_15 := (({{ x_body_0, x_fscope_0, x_11 }} l+ x_12) l+ {{ x_7_v }});
             x_16 := apply(x_15) with elab;
             goto lab_1;
    lab_0:   x_body_1 := [x_9, "@call"];
             goto [(x_body_1 = "ExecuteEval")] then_1 else_2;
    then_1:  x_17 := extern ExecuteEval(x__sc_fst, x__this, x_7_v) with elab;
             goto lab_1;
    else_2:  x_fscope_1 := [x_9, "@scope"];
             goto [((typeOf x_6) = List)] then_2 else_3;
    then_2:  goto [(l-nth(x_6, 0.) = "o")] then_3 else_3;
    then_3:  x_this_0 := l-nth(x_6, 1.);
             goto fi_0;
    else_3:  x_this_1 := undefined;
    fi_0:    PHI(x_this_2: x_this_0, x_this_1);
             goto [((typeOf x_this_2) = Obj)] next_2 next_3;
    next_2:  [x_this_2, "__newTarget"] := {{ "d", undefined, true, true, true }};
    next_3:  x_18 := x_body_1(x_fscope_1, x_this_2, x_7_v) with elab;
    lab_1:   PHI(x_19: x_16, x_17, x_18);
             goto [(x_19 = empty)] next_4 next_5;
    next_4:  x_20 := undefined;
    next_5:  PHI(x_21: x_19, x_20);
             x_21_v := "i__getValue"(x_21) with elab;
             x_22 := "hasProperty"($lg, "initMessagePassing") with elab;
             goto [x_22] then_4 else_4;
    then_4:  x_23 := {{ "v", $lg, "initMessagePassing" }};
             goto end_1;
    else_4:  x_24 := {{ "v", undefined, "initMessagePassing" }};
    end_1:   PHI(x_25: x_23, x_24);
             x_25_v := "i__getValue"(x_25) with elab;
             goto [(not ((typeOf x_25_v) = Obj))] elab next_6;
    next_6:  x_27 := metadata (x_25_v);
             x_26 := "i__isCallable"(x_25_v);
             goto [x_26] next_7 elab;
    next_7:  x_28 := hasField(x_27,"@boundThis");
             goto [x_28] else_5 lab_2;
    else_5:  x_29 := [x_27, "@boundThis"];
             x_30 := [x_27, "@boundArguments"];
             x_31 := [x_27, "@targetFunction"];
             x_32 := metadata (x_31);
             x_body_2 := [x_32, "@call"];
             x_fscope_2 := [x_32, "@scope"];
             x_33 := (({{ x_body_2, x_fscope_2, x_29 }} l+ x_30) l+ {{  }});
             x_34 := apply(x_33) with elab;
             goto lab_3;
    lab_2:   x_body_3 := [x_27, "@call"];
             goto [(x_body_3 = "ExecuteEval")] then_5 else_6;
    then_5:  x_35 := extern ExecuteEval(x__sc_fst, x__this) with elab;
             goto lab_3;
    else_6:  x_fscope_3 := [x_27, "@scope"];
             goto [((typeOf x_25) = List)] then_6 else_7;
    then_6:  goto [(l-nth(x_25, 0.) = "o")] then_7 else_7;
    then_7:  x_this_3 := l-nth(x_25, 1.);
             goto fi_1;
    else_7:  x_this_4 := undefined;
    fi_1:    PHI(x_this_5: x_this_3, x_this_4);
             goto [((typeOf x_this_5) = Obj)] next_8 next_9;
    next_8:  [x_this_5, "__newTarget"] := {{ "d", undefined, true, true, true }};
    next_9:  x_36 := x_body_3(x_fscope_3, x_this_5) with elab;
    lab_3:   PHI(x_37: x_34, x_35, x_36);
             goto [(x_37 = empty)] next_10 next_11;
    next_10: x_38 := undefined;
    next_11: PHI(x_39: x_37, x_38);
             x_39_v := "i__getValue"(x_39) with elab;
             x_40 := l-nth(x__sc_fst, 0.);
             x_41 := {{ "v", x_40, "MP" }};
             x_42 := "i__checkAssignmentErrors"(x_41) with elab;
             x_43 := "i__putValue"(x_41, x_39_v) with elab;
             x_44 := empty;
             goto [(x_44 = empty)] next_12 next_13;
    next_12: skip;
    next_13: PHI(x_45: x_44, x_21_v);
             x_46 := "hasProperty"($lg, "console") with elab;
             goto [x_46] then_8 else_8;
    then_8:  x_47 := {{ "v", $lg, "console" }};
             goto end_2;
    else_8:  x_48 := {{ "v", undefined, "console" }};
    end_2:   PHI(x_49: x_47, x_48);
             x_49_v := "i__getValue"(x_49) with elab;
             x_50 := "i__checkObjectCoercible"(x_49_v) with elab;
             x_51 := {{ "o", x_49_v, "log" }};
             x_51_v := "i__getValue"(x_51) with elab;
             x_52_v := "i__getValue"("MAIN: Heap initialized!") with elab;
             goto [(not ((typeOf x_51_v) = Obj))] elab next_14;
    next_14: x_54 := metadata (x_51_v);
             x_53 := "i__isCallable"(x_51_v);
             goto [x_53] next_15 elab;
    next_15: x_55 := hasField(x_54,"@boundThis");
             goto [x_55] else_9 lab_4;
    else_9:  x_56 := [x_54, "@boundThis"];
             x_57 := [x_54, "@boundArguments"];
             x_58 := [x_54, "@targetFunction"];
             x_59 := metadata (x_58);
             x_body_4 := [x_59, "@call"];
             x_fscope_4 := [x_59, "@scope"];
             x_60 := (({{ x_body_4, x_fscope_4, x_56 }} l+ x_57) l+ {{ x_52_v }});
             x_61 := apply(x_60) with elab;
             goto lab_5;
    lab_4:   x_body_5 := [x_54, "@call"];
             goto [(x_body_5 = "ExecuteEval")] then_9 else_10;
    then_9:  x_62 := extern ExecuteEval(x__sc_fst, x__this, x_52_v) with elab;
             goto lab_5;
    else_10: x_fscope_5 := [x_54, "@scope"];
             goto [((typeOf x_51) = List)] then_10 else_11;
    then_10: goto [(l-nth(x_51, 0.) = "o")] then_11 else_11;
    then_11: x_this_6 := l-nth(x_51, 1.);
             goto fi_2;
    else_11: x_this_7 := undefined;
    fi_2:    PHI(x_this_8: x_this_6, x_this_7);
             goto [((typeOf x_this_8) = Obj)] next_16 next_17;
    next_16: [x_this_8, "__newTarget"] := {{ "d", undefined, true, true, true }};
    next_17: x_63 := x_body_5(x_fscope_5, x_this_8, x_52_v) with elab;
    lab_5:   PHI(x_64: x_61, x_62, x_63);
             goto [(x_64 = empty)] next_18 next_19;
    next_18: x_65 := undefined;
    next_19: PHI(x_66: x_64, x_65);
             x_66_v := "i__getValue"(x_66) with elab;
             x_67 := l-nth(x__sc_fst, 0.);
             x_68 := {{ "v", x_67, "MP" }};
             x_68_v := "i__getValue"(x_68) with elab;
             x_69 := "i__checkObjectCoercible"(x_68_v) with elab;
             x_70 := {{ "o", x_68_v, "Worker" }};
             x_70_v := "i__getValue"(x_70) with elab;
             x_71 := "i__checkObjectCoercible"(x_70_v) with elab;
             x_72 := {{ "o", x_70_v, "Worker" }};
             x_72_v := "i__getValue"(x_72) with elab;
             x_73 := l-nth(x__sc_fst, 0.);
             x_74 := {{ "v", x_73, "Worker" }};
             x_75 := "i__checkAssignmentErrors"(x_74) with elab;
             x_76 := "i__putValue"(x_74, x_72_v) with elab;
             x_77 := empty;
             goto [(x_77 = empty)] next_20 next_21;
    next_20: skip;
    next_21: PHI(x_78: x_77, x_66_v);
             x_79_v := "i__getValue"(6.) with elab;
             x_80 := l-nth(x__sc_fst, 0.);
             x_81 := {{ "v", x_80, "n" }};
             x_82 := "i__checkAssignmentErrors"(x_81) with elab;
             x_83 := "i__putValue"(x_81, x_79_v) with elab;
             x_84 := empty;
             goto [(x_84 = empty)] next_22 next_23;
    next_22: skip;
    next_23: PHI(x_85: x_84, x_78);
             x_86 := l-nth(x__sc_fst, 0.);
             x_87 := {{ "v", x_86, "Worker" }};
             x_87_v := "i__getValue"(x_87) with elab;
             x_88_v := "i__getValue"("FibonacciWorker.js") with elab;
             goto [(not ((typeOf x_87_v) = Obj))] elab next_24;
    next_24: x_89 := metadata (x_87_v);
             x_90 := hasField(x_89,"@construct");
             goto [x_90] then_13 elab;
    then_13: x_91 := hasField(x_89,"@boundThis");
             goto [x_91] else_12 then_12;
    else_12: x_92 := [x_89, "@boundArguments"];
             x_93 := [x_89, "@targetFunction"];
             x_94 := {{ "o", x_93, "prototype" }};
             x_94_v := "i__getValue"(x_94) with elab;
             goto [((typeOf x_94_v) = Obj)] else_13 then_14;
    then_14: x_95 := $lobj_proto;
    else_13: PHI(x_96: x_94_v, x_95);
             x_this_9 := "create_default_object"(x_96);
             x_97 := metadata (x_93);
             x_body_6 := [x_97, "@construct"];
             x_fscope_6 := [x_97, "@scope"];
             x_98 := (({{ x_body_6, x_fscope_6, x_this_9 }} l+ x_92) l+ {{ x_88_v }});
             x_99 := apply(x_98) with elab;
             goto [((typeOf x_99) = Obj)] next_26 next_25;
    next_25: skip;
    next_26: PHI(x_100: x_99, x_this_9);
             goto lab_6;
    then_12: x_101 := {{ "o", x_87_v, "prototype" }};
             x_101_v := "i__getValue"(x_101) with elab;
             goto [((typeOf x_101_v) = Obj)] else_14 then_15;
    then_15: x_102 := $lobj_proto;
    else_14: PHI(x_103: x_101_v, x_102);
             x_this_10 := "create_default_object"(x_103);
             x_body_7 := [x_89, "@construct"];
             x_fscope_7 := [x_89, "@scope"];
             [x_this_10, "__newTarget"] := {{ "d", x_87_v, true, true, true }};
             x_105 := x_body_7(x_fscope_7, x_this_10, x_88_v) with elab;
             goto [((typeOf x_105) = Obj)] next_28 next_27;
    next_27: skip;
    next_28: PHI(x_106: x_105, x_this_10);
    lab_6:   PHI(x_107: x_100, x_106);
             x_107_v := "i__getValue"(x_107) with elab;
             x_108 := l-nth(x__sc_fst, 0.);
             x_109 := {{ "v", x_108, "worker" }};
             x_110 := "i__checkAssignmentErrors"(x_109) with elab;
             x_111 := "i__putValue"(x_109, x_107_v) with elab;
             x_112 := empty;
             goto [(x_112 = empty)] next_29 next_30;
    next_29: skip;
    next_30: PHI(x_113: x_112, x_85);
             x_114 := "hasProperty"($lg, "console") with elab;
             goto [x_114] then_16 else_15;
    then_16: x_115 := {{ "v", $lg, "console" }};
             goto end_3;
    else_15: x_116 := {{ "v", undefined, "console" }};
    end_3:   PHI(x_117: x_115, x_116);
             x_117_v := "i__getValue"(x_117) with elab;
             x_118 := "i__checkObjectCoercible"(x_117_v) with elab;
             x_119 := {{ "o", x_117_v, "log" }};
             x_119_v := "i__getValue"(x_119) with elab;
             x_124_v := "i__getValue"("MAIN: worker created with id ") with elab;
             x_120 := l-nth(x__sc_fst, 0.);
             x_121 := {{ "v", x_120, "worker" }};
             x_121_v := "i__getValue"(x_121) with elab;
             x_122 := "i__checkObjectCoercible"(x_121_v) with elab;
             x_123 := {{ "o", x_121_v, "__id" }};
             x_123_v := "i__getValue"(x_123) with elab;
             x_125_p := "i__toPrimitive"(x_124_v) with elab;
             x_123_p := "i__toPrimitive"(x_123_v) with elab;
             goto [(((typeOf x_125_p) = Str) or ((typeOf x_123_p) = Str))] then_17 else_16;
    then_17: x_126_s := "i__toStringComputed"(x_125_p) with elab;
             x_123_s := "i__toStringComputed"(x_123_p) with elab;
             x_127 := (x_126_s ++ x_123_s);
             goto fi_3;
    else_16: x_128_n := "i__toNumber"(x_125_p) with elab;
             x_123_n := "i__toNumber"(x_123_p) with elab;
             x_129 := (x_128_n + x_123_n);
    fi_3:    PHI(x_130: x_127, x_129);
             x_130_v := "i__getValue"(x_130) with elab;
             goto [(not ((typeOf x_119_v) = Obj))] elab next_31;
    next_31: x_132 := metadata (x_119_v);
             x_131 := "i__isCallable"(x_119_v);
             goto [x_131] next_32 elab;
    next_32: x_133 := hasField(x_132,"@boundThis");
             goto [x_133] else_17 lab_7;
    else_17: x_134 := [x_132, "@boundThis"];
             x_135 := [x_132, "@boundArguments"];
             x_136 := [x_132, "@targetFunction"];
             x_137 := metadata (x_136);
             x_body_8 := [x_137, "@call"];
             x_fscope_8 := [x_137, "@scope"];
             x_138 := (({{ x_body_8, x_fscope_8, x_134 }} l+ x_135) l+ {{ x_130_v }});
             x_139 := apply(x_138) with elab;
             goto lab_8;
    lab_7:   x_body_9 := [x_132, "@call"];
             goto [(x_body_9 = "ExecuteEval")] then_18 else_18;
    then_18: x_140 := extern ExecuteEval(x__sc_fst, x__this, x_130_v) with elab;
             goto lab_8;
    else_18: x_fscope_9 := [x_132, "@scope"];
             goto [((typeOf x_119) = List)] then_19 else_19;
    then_19: goto [(l-nth(x_119, 0.) = "o")] then_20 else_19;
    then_20: x_this_11 := l-nth(x_119, 1.);
             goto fi_4;
    else_19: x_this_12 := undefined;
    fi_4:    PHI(x_this_13: x_this_11, x_this_12);
             goto [((typeOf x_this_13) = Obj)] next_33 next_34;
    next_33: [x_this_13, "__newTarget"] := {{ "d", undefined, true, true, true }};
    next_34: x_141 := x_body_9(x_fscope_9, x_this_13, x_130_v) with elab;
    lab_8:   PHI(x_142: x_139, x_140, x_141);
             goto [(x_142 = empty)] next_35 next_36;
    next_35: x_143 := undefined;
    next_36: PHI(x_144: x_142, x_143);
             x_144_v := "i__getValue"(x_144) with elab;
             x_145 := "hasProperty"($lg, "console") with elab;
             goto [x_145] then_21 else_20;
    then_21: x_146 := {{ "v", $lg, "console" }};
             goto end_4;
    else_20: x_147 := {{ "v", undefined, "console" }};
    end_4:   PHI(x_148: x_146, x_147);
             x_148_v := "i__getValue"(x_148) with elab;
             x_149 := "i__checkObjectCoercible"(x_148_v) with elab;
             x_150 := {{ "o", x_148_v, "log" }};
             x_150_v := "i__getValue"(x_150) with elab;
             x_151_v := "i__getValue"("MAIN: going to send message to worker") with elab;
             goto [(not ((typeOf x_150_v) = Obj))] elab next_37;
    next_37: x_153 := metadata (x_150_v);
             x_152 := "i__isCallable"(x_150_v);
             goto [x_152] next_38 elab;
    next_38: x_154 := hasField(x_153,"@boundThis");
             goto [x_154] else_21 lab_9;
    else_21: x_155 := [x_153, "@boundThis"];
             x_156 := [x_153, "@boundArguments"];
             x_157 := [x_153, "@targetFunction"];
             x_158 := metadata (x_157);
             x_body_10 := [x_158, "@call"];
             x_fscope_10 := [x_158, "@scope"];
             x_159 := (({{ x_body_10, x_fscope_10, x_155 }} l+ x_156) l+ {{ x_151_v }});
             x_160 := apply(x_159) with elab;
             goto lab_10;
    lab_9:   x_body_11 := [x_153, "@call"];
             goto [(x_body_11 = "ExecuteEval")] then_22 else_22;
    then_22: x_161 := extern ExecuteEval(x__sc_fst, x__this, x_151_v) with elab;
             goto lab_10;
    else_22: x_fscope_11 := [x_153, "@scope"];
             goto [((typeOf x_150) = List)] then_23 else_23;
    then_23: goto [(l-nth(x_150, 0.) = "o")] then_24 else_23;
    then_24: x_this_14 := l-nth(x_150, 1.);
             goto fi_5;
    else_23: x_this_15 := undefined;
    fi_5:    PHI(x_this_16: x_this_14, x_this_15);
             goto [((typeOf x_this_16) = Obj)] next_39 next_40;
    next_39: [x_this_16, "__newTarget"] := {{ "d", undefined, true, true, true }};
    next_40: x_162 := x_body_11(x_fscope_11, x_this_16, x_151_v) with elab;
    lab_10:  PHI(x_163: x_160, x_161, x_162);
             goto [(x_163 = empty)] next_41 next_42;
    next_41: x_164 := undefined;
    next_42: PHI(x_165: x_163, x_164);
             x_165_v := "i__getValue"(x_165) with elab;
             x_166 := l-nth(x__sc_fst, 0.);
             x_167 := {{ "v", x_166, "worker" }};
             x_167_v := "i__getValue"(x_167) with elab;
             x_168 := "i__checkObjectCoercible"(x_167_v) with elab;
             x_169 := {{ "o", x_167_v, "postMessage" }};
             x_169_v := "i__getValue"(x_169) with elab;
             x_170 := l-nth(x__sc_fst, 0.);
             x_171 := {{ "v", x_170, "n" }};
             x_171_v := "i__getValue"(x_171) with elab;
             goto [(not ((typeOf x_169_v) = Obj))] elab next_43;
    next_43: x_173 := metadata (x_169_v);
             x_172 := "i__isCallable"(x_169_v);
             goto [x_172] next_44 elab;
    next_44: x_174 := hasField(x_173,"@boundThis");
             goto [x_174] else_24 lab_11;
    else_24: x_175 := [x_173, "@boundThis"];
             x_176 := [x_173, "@boundArguments"];
             x_177 := [x_173, "@targetFunction"];
             x_178 := metadata (x_177);
             x_body_12 := [x_178, "@call"];
             x_fscope_12 := [x_178, "@scope"];
             x_179 := (({{ x_body_12, x_fscope_12, x_175 }} l+ x_176) l+ {{ x_171_v }});
             x_180 := apply(x_179) with elab;
             goto lab_12;
    lab_11:  x_body_13 := [x_173, "@call"];
             goto [(x_body_13 = "ExecuteEval")] then_25 else_25;
    then_25: x_181 := extern ExecuteEval(x__sc_fst, x__this, x_171_v) with elab;
             goto lab_12;
    else_25: x_fscope_13 := [x_173, "@scope"];
             goto [((typeOf x_169) = List)] then_26 else_26;
    then_26: goto [(l-nth(x_169, 0.) = "o")] then_27 else_26;
    then_27: x_this_17 := l-nth(x_169, 1.);
             goto fi_6;
    else_26: x_this_18 := undefined;
    fi_6:    PHI(x_this_19: x_this_17, x_this_18);
             goto [((typeOf x_this_19) = Obj)] next_45 next_46;
    next_45: [x_this_19, "__newTarget"] := {{ "d", undefined, true, true, true }};
    next_46: x_182 := x_body_13(x_fscope_13, x_this_19, x_171_v) with elab;
    lab_12:  PHI(x_183: x_180, x_181, x_182);
             goto [(x_183 = empty)] next_47 next_48;
    next_47: x_184 := undefined;
    next_48: PHI(x_185: x_183, x_184);
             x_185_v := "i__getValue"(x_185) with elab;
             x_186 := "hasProperty"($lg, "console") with elab;
             goto [x_186] then_28 else_27;
    then_28: x_187 := {{ "v", $lg, "console" }};
             goto end_5;
    else_27: x_188 := {{ "v", undefined, "console" }};
    end_5:   PHI(x_189: x_187, x_188);
             x_189_v := "i__getValue"(x_189) with elab;
             x_190 := "i__checkObjectCoercible"(x_189_v) with elab;
             x_191 := {{ "o", x_189_v, "log" }};
             x_191_v := "i__getValue"(x_191) with elab;
             x_192_v := "i__getValue"("MAIN: message sent to worker") with elab;
             goto [(not ((typeOf x_191_v) = Obj))] elab next_49;
    next_49: x_194 := metadata (x_191_v);
             x_193 := "i__isCallable"(x_191_v);
             goto [x_193] next_50 elab;
    next_50: x_195 := hasField(x_194,"@boundThis");
             goto [x_195] else_28 lab_13;
    else_28: x_196 := [x_194, "@boundThis"];
             x_197 := [x_194, "@boundArguments"];
             x_198 := [x_194, "@targetFunction"];
             x_199 := metadata (x_198);
             x_body_14 := [x_199, "@call"];
             x_fscope_14 := [x_199, "@scope"];
             x_200 := (({{ x_body_14, x_fscope_14, x_196 }} l+ x_197) l+ {{ x_192_v }});
             x_201 := apply(x_200) with elab;
             goto lab_14;
    lab_13:  x_body_15 := [x_194, "@call"];
             goto [(x_body_15 = "ExecuteEval")] then_29 else_29;
    then_29: x_202 := extern ExecuteEval(x__sc_fst, x__this, x_192_v) with elab;
             goto lab_14;
    else_29: x_fscope_15 := [x_194, "@scope"];
             goto [((typeOf x_191) = List)] then_30 else_30;
    then_30: goto [(l-nth(x_191, 0.) = "o")] then_31 else_30;
    then_31: x_this_20 := l-nth(x_191, 1.);
             goto fi_7;
    else_30: x_this_21 := undefined;
    fi_7:    PHI(x_this_22: x_this_20, x_this_21);
             goto [((typeOf x_this_22) = Obj)] next_51 next_52;
    next_51: [x_this_22, "__newTarget"] := {{ "d", undefined, true, true, true }};
    next_52: x_203 := x_body_15(x_fscope_15, x_this_22, x_192_v) with elab;
    lab_14:  PHI(x_204: x_201, x_202, x_203);
             goto [(x_204 = empty)] next_53 next_54;
    next_53: x_205 := undefined;
    next_54: PHI(x_206: x_204, x_205);
             x_206_v := "i__getValue"(x_206) with elab;
             x_207 := l-nth(x__sc_fst, 0.);
             x_208 := {{ "v", x_207, "worker" }};
             x_208_v := "i__getValue"(x_208) with elab;
             x_209 := "i__checkObjectCoercible"(x_208_v) with elab;
             x_210 := {{ "o", x_208_v, "onmessage" }};
             x_f_0 := "create_function_object"(x__sc_fst, "", "anonymous_MainFibonacci_0", "anonymous_MainFibonacci_0", {{ "e" }});
             x_f_0_v := "i__getValue"(x_f_0) with elab;
             x_211 := "i__checkAssignmentErrors"(x_210) with elab;
             x_212 := "i__putValue"(x_210, x_f_0_v) with elab;
             skip;
             ret := x_f_0_v;
    rlab:    return;
    elab:    PHI(ret: x_1, x_4_v, x_5, x_6_v, x_7_v, x__te, x__te, x_16, x_17, x_18, x_21_v, x_22, x_25_v, x__te, x__te, x_34, x_35, x_36, x_39_v, x_42, x_43, x_46, x_49_v, x_50, x_51_v, x_52_v, x__te, x__te, x_61, x_62, x_63, x_66_v, x_68_v, x_69, x_70_v, x_71, x_72_v, x_75, x_76, x_79_v, x_82, x_83, x_87_v, x_88_v, x__te, x__te, x_94_v, x_99, x_101_v, x_105, x_107_v, x_110, x_111, x_114, x_117_v, x_118, x_119_v, x_124_v, x_121_v, x_122, x_123_v, x_125_p, x_123_p, x_126_s, x_123_s, x_128_n, x_123_n, x_130_v, x__te, x__te, x_139, x_140, x_141, x_144_v, x_145, x_148_v, x_149, x_150_v, x_151_v, x__te, x__te, x_160, x_161, x_162, x_165_v, x_167_v, x_168, x_169_v, x_171_v, x__te, x__te, x_180, x_181, x_182, x_185_v, x_186, x_189_v, x_190, x_191_v, x_192_v, x__te, x__te, x_201, x_202, x_203, x_206_v, x_208_v, x_209, x_f_0_v, x_211, x_212);
             throw
};
